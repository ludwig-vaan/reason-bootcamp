// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Char = require("bs-platform/lib/js/char.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ArrayLabels = require("bs-platform/lib/js/arrayLabels.js");

var array = /* array */[
  1,
  2,
  3
];

var otherArray = Caml_array.caml_make_vect(3, "a");

var logicArray = ArrayLabels.init(3, (function (i) {
        return i + 1 | 0;
      }));

function maxOfArray(arr) {
  return ArrayLabels.fold_left(Caml_obj.caml_max, Pervasives.min_int, arr);
}

function filterArray(filter, array) {
  return $$Array.of_list(List.filter(filter)($$Array.to_list(array)));
}

var alphabet = $$Array.to_list($$Array.mapi((function (i, param) {
            return Char.chr(i + 65 | 0);
          }), Caml_array.caml_make_vect(26, 0)));

function isPangram(str) {
  var partial_arg = $$String.uppercase(str);
  return List.for_all((function (param) {
                return $$String.contains(partial_arg, param);
              }), alphabet);
}

exports.array = array;
exports.otherArray = otherArray;
exports.logicArray = logicArray;
exports.maxOfArray = maxOfArray;
exports.filterArray = filterArray;
exports.alphabet = alphabet;
exports.isPangram = isPangram;
/* logicArray Not a pure module */
